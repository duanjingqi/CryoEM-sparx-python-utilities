#!/usr/bin/env python
# Usage: dstar_class.py star_file_1 star_file_2 micrograph_file
# star_file_1 --- the star file generated by relion 2D classification, usually named as run#_it###_data.star, which contains micrograph # and class #. 
# star_file_2 --- the star file generated after inspecting the 2D classes, usually contains good classes for further processing.
# micrograph_file --- will contain the selected micrographs for further process.
# created by Jingqi Duan Feb 17 2017

import sys
import os

def aclass_dict(micrograph_star): 
    """ Make a dictionary from the star file, key = 'class #', value = list[micrograph #]"""

    # get the class number as a list
    class_list = []
    for line in micrograph_star: 
        if len(line.split()) > 2:
            class_list.append(line.split()[6])
    class_list = list(set(class_list))

    # make the class_dict
    class_dict = {}
    for aclass in class_list: 
        class_dict[aclass] = []

    # fill each class with micrograph number
    for line in micrograph_star: 
        if len(line.split()) > 2: 
            class_number = line.split()[6]
            micrograph_number = str(int(line.split()[0][:6]))
            class_dict[class_number].append(micrograph_number)

    return class_dict

# file path
file_path = sys.argv[1:]
    
# check argument size
if len(file_path) != 3: 
    print "Usage: dstar_class.py star_file_1 star_file_2 micrograph_file"
    print "error! only 3 files can be taken"
    sys.exit(1)

# read star files in 
micrograph_star = open(file_path[0]).read().split('\n')
class_star = open(file_path[1]).read().split('\n')

# get the select classes as a list
selected_class = []
for line in class_star: 
    if line.find("@") >= 0: 
        selected_class.append(str(int(line.split()[-1][:6])))

# get the selected micrographs
selected_micrographs = []
class_dict = aclass_dict(micrograph_star)
for aclass in selected_class: 
    selected_micrographs.extend(class_dict[aclass])

# output
file_out = open(file_path[2],'w')
file_out.write('\n'.join(selected_micrographs))
file_out.close()


